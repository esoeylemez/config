#! /usr/bin/env zsh

setopt err_exit
setopt null_glob

cabal_file=(*.cabal)
if [[ ! -f $cabal_file ]]; then
    if [[ -f ghc.nix ]]; then
        cmd=("exec" "ghci" "${(q)@}")
        exec nix-shell -E -Q --command "$cmd" '
            let pkgs = import <nixpkgs> {};
                ghc = import ./ghc.nix { inherit pkgs; };
            in pkgs.stdenv.mkDerivation {
                name = "ghc-bogus";
                buildInputs = [ghc];
            }'
    else
        exec ghci $*
    fi
fi


[[ -f .no-cabal2nix || default.nix -nt $cabal_file ]] ||
    cabal2nix . > default.nix

[[ shell.nix -nt $cabal_file ]] ||
    cabal2nix -fdevel -fexamples --shell . > shell.nix

# [[ dist/shell.token -nt shell.nix ]] ||
#     ( nix-instantiate shell.nix -Q --indirect --add-root `pwd`/dist/shell.drv > /dev/null &&
#           touch dist/shell.token )

args=""
for n in $*; do
    args+=" ${(q)n}"
done

flags=`grep -Pio "(?<=hs-source-dirs:).*" $cabal_file | sed -re "s/[a-zA-Z_-]+/-i&/g" | tr -s "\n " " "`

#exec nix-shell `pwd`/dist/shell.drv -Q --pure --command "exec bash $args"
exec nix-shell shell.nix -Q --command "exec ghci $flags $args"
